<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test">
	<!--
		根据用户ID查询用户信息，只返回一条。
		#{}表示一个占位符号;
		${}:表示拼接sql串，将接收到的参数的内容不加任何修饰的拼接在sql中 ；
		${}容易sql注入，建议不使用；
		resultType：表示单条记录映射成的java对象；
		parameterType输入条件的类型；
	-->
	<select id="findUserById" parameterType="java.util.Map" resultType="java.util.Map" >
		select * from xd_user where 1=1 ${con}
	</select>
	<!-- 获取表的主键 -->
	<select id="getTableId" parameterType="java.lang.String" resultType="java.util.Map" >
		select f_get_table_id('${value}') table_id from dual
	</select>
	<!--
		根据用户名模糊查询用户信息，可能返回多条。
	-->
	<select id="findUserByName" parameterType="java.lang.String" resultType="java.util.Map" >
		select * from xd_user where xu_name like '%${value}%'
	</select>
	<!--
		添加用户
		parameterType:指定输入参数类型是pojo（包括用户信息）
		#{}中指定pojo的属性名，接收到pojo对象的属性值，mybatis通过OGNL获得对象的属性值；
	-->
	<insert id="insertUser" parameterType="java.util.Map">
		<!-- 
			将插入的数据主键返回，返回到user对象中；
			select LAST_INSERT_ID();得到	刚insert进去记录的主键值，只适合自增主键
			keyProperty：将查询到的自增主键值设置到parameterType指定的对象的哪个属性
			order：select LAST_INSERT_ID() 执行顺序，相对于insert语句来说它的执行顺序
			resultType:指定select LAST_INSERT_ID()结果类型
		 -->
		<selectKey resultType="java.math.BigDecimal" order="BEFORE" keyProperty="ID">
			select f_get_table_id('${value}') ID from dual
		</selectKey>
		insert into t_user 
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="ID != null" >
		    	id,
		    </if>
		    <if test="username != null" >
		    	username,
		    </if>
		    <if test="userage != null" >
		    	userage,
		    </if>
		    <if test="useraddress != null" >
		    	useraddress
		    </if>
		</trim>
		values 
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="ID != null" >
		    	${ID},
		    </if>
		    <if test="username != null" >
		    	'${username}',
		    </if>
		    <if test="userage != null" >
		    	${userage},
		    </if>
		    <if test="useraddress != null" >
		    	'${useraddress}',
		    </if>
		</trim>
		
		<!-- 
			使用mysql的uuid()生成主键
			执行过程：
				首先通过uuid()得到主键，将主键设置到user对象中，
				其次在insert执行时，从user对象中取出id属性值。
		 -->
		<!-- <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
			select uuid()oracle 可以查询序列得到自增主键
		</selectKey>
		
		insert into t_user (id,userName,userAge,userAddress) 
		value(#{id},#{userName},#{userAge},#{userAddress}) -->
	</insert>
	
	<!--删-->
	<delete id="deleteUser" parameterType="java.lang.String">
		delete from t_user where 1=1 ${value}
	</delete>
	
	<!--改-->
	<delete id="updateUser" parameterType="java.util.Map">
		update t_user
		<set>  
	        <if test="username != null and username != '' ">
	        	username='${username}',
	        </if>
	        <if test="userage != null and userage != '' ">
	        	userage=${userage},
	        </if>
	        <if test="useraddress != null and useraddress != '' ">
	        	useraddress='${useraddress}',
	        </if>
        </set>
        where 1=1 ${con}
	</delete>
	
	<parameterMap type="java.util.Map" id="getUserCountMap">
    	<parameter property="user_id" mode="IN" jdbcType="INTEGER"/>
    	<parameter property="returnstr" mode="OUT" jdbcType="VARCHAR"/>
    </parameterMap>
	
	<!--调用存储过程-->
	<select id="callProcedures" parameterMap="getUserCountMap" statementType="CALLABLE">
    	CALL a_getuser_test(?,?)
    </select>
	
	
	
	
</mapper>